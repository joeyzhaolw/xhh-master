<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xhh.mapper.SysProductStockLogMapper" >
  <!--<resultMap id="BaseResultMap" type="com.xhh.pojo.SysProductStockLog" >
    <id column="stock_log_id" property="stockLogId" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="admin_user_id" property="adminUserId" jdbcType="INTEGER" />
    <result column="stock_log_num" property="stockLogNum" jdbcType="INTEGER" />
    <result column="stock_log_logistics" property="stockLogLogistics" jdbcType="VARCHAR" />
    <result column="stock_log_bill" property="stockLogBill" jdbcType="VARCHAR" />
    <result column="stock_log_company" property="stockLogCompany" jdbcType="VARCHAR" />
    <result column="stock_log_name" property="stockLogName" jdbcType="VARCHAR" />
    <result column="stock_log_phone" property="stockLogPhone" jdbcType="VARCHAR" />
    <result column="stock_log_address" property="stockLogAddress" jdbcType="VARCHAR" />
    <result column="stock_log_time" property="stockLogTime" jdbcType="TIMESTAMP" />
    <result column="stock_in_or_out" property="stockInOrOut" jdbcType="INTEGER" />
    <result column="stock_log_change_num" property="stockLogChangeNum" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stock_log_id, product_id, admin_user_id, stock_log_num, stock_log_logistics, stock_log_bill, 
    stock_log_company, stock_log_name, stock_log_phone, stock_log_address, stock_log_time, 
    stock_in_or_out, stock_log_change_num
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xhh.pojo.SysProductStockLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_product_stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_product_stock_log
    where stock_log_id = #{stockLogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_product_stock_log
    where stock_log_id = #{stockLogId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xhh.pojo.SysProductStockLogExample" >
    delete from sys_product_stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xhh.pojo.SysProductStockLog" >
    insert into sys_product_stock_log (stock_log_id, product_id, admin_user_id, 
      stock_log_num, stock_log_logistics, stock_log_bill, 
      stock_log_company, stock_log_name, stock_log_phone, 
      stock_log_address, stock_log_time, stock_in_or_out, 
      stock_log_change_num)
    values (#{stockLogId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{adminUserId,jdbcType=INTEGER}, 
      #{stockLogNum,jdbcType=INTEGER}, #{stockLogLogistics,jdbcType=VARCHAR}, #{stockLogBill,jdbcType=VARCHAR}, 
      #{stockLogCompany,jdbcType=VARCHAR}, #{stockLogName,jdbcType=VARCHAR}, #{stockLogPhone,jdbcType=VARCHAR}, 
      #{stockLogAddress,jdbcType=VARCHAR}, #{stockLogTime,jdbcType=TIMESTAMP}, #{stockInOrOut,jdbcType=INTEGER}, 
      #{stockLogChangeNum,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xhh.pojo.SysProductStockLog" >
    insert into sys_product_stock_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stockLogId != null" >
        stock_log_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="adminUserId != null" >
        admin_user_id,
      </if>
      <if test="stockLogNum != null" >
        stock_log_num,
      </if>
      <if test="stockLogLogistics != null" >
        stock_log_logistics,
      </if>
      <if test="stockLogBill != null" >
        stock_log_bill,
      </if>
      <if test="stockLogCompany != null" >
        stock_log_company,
      </if>
      <if test="stockLogName != null" >
        stock_log_name,
      </if>
      <if test="stockLogPhone != null" >
        stock_log_phone,
      </if>
      <if test="stockLogAddress != null" >
        stock_log_address,
      </if>
      <if test="stockLogTime != null" >
        stock_log_time,
      </if>
      <if test="stockInOrOut != null" >
        stock_in_or_out,
      </if>
      <if test="stockLogChangeNum != null" >
        stock_log_change_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stockLogId != null" >
        #{stockLogId,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="adminUserId != null" >
        #{adminUserId,jdbcType=INTEGER},
      </if>
      <if test="stockLogNum != null" >
        #{stockLogNum,jdbcType=INTEGER},
      </if>
      <if test="stockLogLogistics != null" >
        #{stockLogLogistics,jdbcType=VARCHAR},
      </if>
      <if test="stockLogBill != null" >
        #{stockLogBill,jdbcType=VARCHAR},
      </if>
      <if test="stockLogCompany != null" >
        #{stockLogCompany,jdbcType=VARCHAR},
      </if>
      <if test="stockLogName != null" >
        #{stockLogName,jdbcType=VARCHAR},
      </if>
      <if test="stockLogPhone != null" >
        #{stockLogPhone,jdbcType=VARCHAR},
      </if>
      <if test="stockLogAddress != null" >
        #{stockLogAddress,jdbcType=VARCHAR},
      </if>
      <if test="stockLogTime != null" >
        #{stockLogTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stockInOrOut != null" >
        #{stockInOrOut,jdbcType=INTEGER},
      </if>
      <if test="stockLogChangeNum != null" >
        #{stockLogChangeNum,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xhh.pojo.SysProductStockLogExample" resultType="java.lang.Integer" >
    select count(*) from sys_product_stock_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_product_stock_log
    <set >
      <if test="record.stockLogId != null" >
        stock_log_id = #{record.stockLogId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.adminUserId != null" >
        admin_user_id = #{record.adminUserId,jdbcType=INTEGER},
      </if>
      <if test="record.stockLogNum != null" >
        stock_log_num = #{record.stockLogNum,jdbcType=INTEGER},
      </if>
      <if test="record.stockLogLogistics != null" >
        stock_log_logistics = #{record.stockLogLogistics,jdbcType=VARCHAR},
      </if>
      <if test="record.stockLogBill != null" >
        stock_log_bill = #{record.stockLogBill,jdbcType=VARCHAR},
      </if>
      <if test="record.stockLogCompany != null" >
        stock_log_company = #{record.stockLogCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.stockLogName != null" >
        stock_log_name = #{record.stockLogName,jdbcType=VARCHAR},
      </if>
      <if test="record.stockLogPhone != null" >
        stock_log_phone = #{record.stockLogPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.stockLogAddress != null" >
        stock_log_address = #{record.stockLogAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.stockLogTime != null" >
        stock_log_time = #{record.stockLogTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stockInOrOut != null" >
        stock_in_or_out = #{record.stockInOrOut,jdbcType=INTEGER},
      </if>
      <if test="record.stockLogChangeNum != null" >
        stock_log_change_num = #{record.stockLogChangeNum,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_product_stock_log
    set stock_log_id = #{record.stockLogId,jdbcType=INTEGER},
      product_id = #{record.productId,jdbcType=INTEGER},
      admin_user_id = #{record.adminUserId,jdbcType=INTEGER},
      stock_log_num = #{record.stockLogNum,jdbcType=INTEGER},
      stock_log_logistics = #{record.stockLogLogistics,jdbcType=VARCHAR},
      stock_log_bill = #{record.stockLogBill,jdbcType=VARCHAR},
      stock_log_company = #{record.stockLogCompany,jdbcType=VARCHAR},
      stock_log_name = #{record.stockLogName,jdbcType=VARCHAR},
      stock_log_phone = #{record.stockLogPhone,jdbcType=VARCHAR},
      stock_log_address = #{record.stockLogAddress,jdbcType=VARCHAR},
      stock_log_time = #{record.stockLogTime,jdbcType=TIMESTAMP},
      stock_in_or_out = #{record.stockInOrOut,jdbcType=INTEGER},
      stock_log_change_num = #{record.stockLogChangeNum,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xhh.pojo.SysProductStockLog" >
    update sys_product_stock_log
    <set >
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="adminUserId != null" >
        admin_user_id = #{adminUserId,jdbcType=INTEGER},
      </if>
      <if test="stockLogNum != null" >
        stock_log_num = #{stockLogNum,jdbcType=INTEGER},
      </if>
      <if test="stockLogLogistics != null" >
        stock_log_logistics = #{stockLogLogistics,jdbcType=VARCHAR},
      </if>
      <if test="stockLogBill != null" >
        stock_log_bill = #{stockLogBill,jdbcType=VARCHAR},
      </if>
      <if test="stockLogCompany != null" >
        stock_log_company = #{stockLogCompany,jdbcType=VARCHAR},
      </if>
      <if test="stockLogName != null" >
        stock_log_name = #{stockLogName,jdbcType=VARCHAR},
      </if>
      <if test="stockLogPhone != null" >
        stock_log_phone = #{stockLogPhone,jdbcType=VARCHAR},
      </if>
      <if test="stockLogAddress != null" >
        stock_log_address = #{stockLogAddress,jdbcType=VARCHAR},
      </if>
      <if test="stockLogTime != null" >
        stock_log_time = #{stockLogTime,jdbcType=TIMESTAMP},
      </if>
      <if test="stockInOrOut != null" >
        stock_in_or_out = #{stockInOrOut,jdbcType=INTEGER},
      </if>
      <if test="stockLogChangeNum != null" >
        stock_log_change_num = #{stockLogChangeNum,jdbcType=INTEGER},
      </if>
    </set>
    where stock_log_id = #{stockLogId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xhh.pojo.SysProductStockLog" >
    update sys_product_stock_log
    set product_id = #{productId,jdbcType=INTEGER},
      admin_user_id = #{adminUserId,jdbcType=INTEGER},
      stock_log_num = #{stockLogNum,jdbcType=INTEGER},
      stock_log_logistics = #{stockLogLogistics,jdbcType=VARCHAR},
      stock_log_bill = #{stockLogBill,jdbcType=VARCHAR},
      stock_log_company = #{stockLogCompany,jdbcType=VARCHAR},
      stock_log_name = #{stockLogName,jdbcType=VARCHAR},
      stock_log_phone = #{stockLogPhone,jdbcType=VARCHAR},
      stock_log_address = #{stockLogAddress,jdbcType=VARCHAR},
      stock_log_time = #{stockLogTime,jdbcType=TIMESTAMP},
      stock_in_or_out = #{stockInOrOut,jdbcType=INTEGER},
      stock_log_change_num = #{stockLogChangeNum,jdbcType=INTEGER}
    where stock_log_id = #{stockLogId,jdbcType=INTEGER}
  </update>-->
</mapper>